1. O que é um "endpoint" em uma API, e para que serve?

R: Endpoint é o local onde a API vai encontrar o código que deve ser executado e excutar, assim como as funções de métodos de CRUD.

2. Qual a função do @router.post(...) no seu código? E por que usamos @app.get("/") no main.py?

R: Eu sei que @router."post" no caso é para criar um recurso em um banco de dados, não sei porque usamos a palavra router nem o @ e não sei o porque usamos isso @app.get("/") no main.py

3. O que significa essa anotação def create_user(db: Session, user: UserCreate) -> User:?
Explique o que é o -> User no final da assinatura.

R: É uma função chamada create_user que recebe os parâmetros db (db que recebe a variável Session) e user (user que recebe a variável UserCreate que é uma função importada de um outro arquivo) e o "-> User" é justamente para setar que a função vai retornar o User.

4. Qual é a responsabilidade do arquivo schemas/user.py e por que ele existe?

R: Ele é o responsável por validar quais tipos de dados cada atributo pode receber e retornar

5. Qual a diferença entre UserCreate e UserResponse nos schemas?

R: UserCreate é uma classe que define atributos para a função de criar usuários e o UserResponse é uma classe que define os atributos que a função pode retornar ao chamar o método GET, caso os atributos do parâmetro passado exista.

6. O que o Depends(get_db) faz exatamente nos endpoints?

R: Acredito ser o código que conecta o banco de dados a função.

7. Para que serve o arquivo .env e como ele se relaciona com segurança e configuração?

R: O arquivo .env contém as variáveis de ambiente, é importante para a segurança pois o código precisa se conectar com o banco de dados e pra isso ele precisa "saber" o nome do banco, o endereço na rede, a senha do banco, usuário do banco e a porta. Essas informações são sensíveis e podem cair em mãos erradas, hackers podem acessar oo banco de dados e apagar, roubar ou realizar ataques.

8. O que é o Sessionlocal() e por que você precisa dele para interagir com o banco?

R: Sessionlocal é a variável que criei que recebe o valor de sessionmaker um atributo do pacote slqalchemy.orm que  cria uma sessão de acesso com o banco de dados, sempre que desejo acessar o banco de dados passo essa variável como parâmetro.

9. Explique o que é hashing de senha e por que você usou isso no seu projeto.

R: Hashing é um método simples de segurança de senhas, ele criptografa as senhas assim que são gravadas no banco de dados, isso não afeta a funcionalidade da senha, mesmo visualizando no banco de dados um código criptografado a senha real permanece a mesma. Isso ajuda a diminuir as chances e aumentar a dificuldade de hackers acessar os dados de usuários da minha API.

10. O que significa o from_attributes = True que aparece no Config dos seus schemas?

R: Essa linha especificamente significa que as classes dos métodos de GET e UPDATE só devem retornar os valores dos atributos SE o usuário existir, ou seja, SE OS ATRIBUTOS FOREM VERDADEIROS, o mesmo serve para a classe DELETE que só deve retornar a mensagem de sucesso se o usuário existir.